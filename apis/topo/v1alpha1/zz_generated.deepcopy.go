//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2021 NDD.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Nddotopology) DeepCopyInto(out *Nddotopology) {
	*out = *in
	if in.Topology != nil {
		in, out := &in.Topology, &out.Topology
		*out = make([]*NddotopologyTopology, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(NddotopologyTopology)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Nddotopology.
func (in *Nddotopology) DeepCopy() *Nddotopology {
	if in == nil {
		return nil
	}
	out := new(Nddotopology)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NddotopologyTopology) DeepCopyInto(out *NddotopologyTopology) {
	*out = *in
	if in.AdminState != nil {
		in, out := &in.AdminState, &out.AdminState
		*out = new(string)
		**out = **in
	}
	if in.Defaults != nil {
		in, out := &in.Defaults, &out.Defaults
		*out = new(NddotopologyTopologyDefaults)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = make([]*NddotopologyTopologyKind, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(NddotopologyTopologyKind)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.Link != nil {
		in, out := &in.Link, &out.Link
		*out = make([]*NddotopologyTopologyLink, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(NddotopologyTopologyLink)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Node != nil {
		in, out := &in.Node, &out.Node
		*out = make([]*NddotopologyTopologyNode, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(NddotopologyTopologyNode)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(NddotopologyTopologyState)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NddotopologyTopology.
func (in *NddotopologyTopology) DeepCopy() *NddotopologyTopology {
	if in == nil {
		return nil
	}
	out := new(NddotopologyTopology)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NddotopologyTopologyDefaults) DeepCopyInto(out *NddotopologyTopologyDefaults) {
	*out = *in
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = make([]*NddotopologyTopologyDefaultsTag, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(NddotopologyTopologyDefaultsTag)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NddotopologyTopologyDefaults.
func (in *NddotopologyTopologyDefaults) DeepCopy() *NddotopologyTopologyDefaults {
	if in == nil {
		return nil
	}
	out := new(NddotopologyTopologyDefaults)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NddotopologyTopologyDefaultsTag) DeepCopyInto(out *NddotopologyTopologyDefaultsTag) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NddotopologyTopologyDefaultsTag.
func (in *NddotopologyTopologyDefaultsTag) DeepCopy() *NddotopologyTopologyDefaultsTag {
	if in == nil {
		return nil
	}
	out := new(NddotopologyTopologyDefaultsTag)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NddotopologyTopologyKind) DeepCopyInto(out *NddotopologyTopologyKind) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = make([]*NddotopologyTopologyKindTag, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(NddotopologyTopologyKindTag)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NddotopologyTopologyKind.
func (in *NddotopologyTopologyKind) DeepCopy() *NddotopologyTopologyKind {
	if in == nil {
		return nil
	}
	out := new(NddotopologyTopologyKind)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NddotopologyTopologyKindTag) DeepCopyInto(out *NddotopologyTopologyKindTag) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NddotopologyTopologyKindTag.
func (in *NddotopologyTopologyKindTag) DeepCopy() *NddotopologyTopologyKindTag {
	if in == nil {
		return nil
	}
	out := new(NddotopologyTopologyKindTag)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NddotopologyTopologyLink) DeepCopyInto(out *NddotopologyTopologyLink) {
	*out = *in
	if in.AdminState != nil {
		in, out := &in.AdminState, &out.AdminState
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Endpoints != nil {
		in, out := &in.Endpoints, &out.Endpoints
		*out = make([]*NddotopologyTopologyLinkEndpoints, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(NddotopologyTopologyLinkEndpoints)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(NddotopologyTopologyLinkState)
		(*in).DeepCopyInto(*out)
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = make([]*NddotopologyTopologyLinkTag, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(NddotopologyTopologyLinkTag)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NddotopologyTopologyLink.
func (in *NddotopologyTopologyLink) DeepCopy() *NddotopologyTopologyLink {
	if in == nil {
		return nil
	}
	out := new(NddotopologyTopologyLink)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NddotopologyTopologyLinkEndpoints) DeepCopyInto(out *NddotopologyTopologyLinkEndpoints) {
	*out = *in
	if in.InterfaceName != nil {
		in, out := &in.InterfaceName, &out.InterfaceName
		*out = new(string)
		**out = **in
	}
	if in.NodeName != nil {
		in, out := &in.NodeName, &out.NodeName
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = make([]*NddotopologyTopologyLinkEndpointsTag, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(NddotopologyTopologyLinkEndpointsTag)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NddotopologyTopologyLinkEndpoints.
func (in *NddotopologyTopologyLinkEndpoints) DeepCopy() *NddotopologyTopologyLinkEndpoints {
	if in == nil {
		return nil
	}
	out := new(NddotopologyTopologyLinkEndpoints)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NddotopologyTopologyLinkEndpointsTag) DeepCopyInto(out *NddotopologyTopologyLinkEndpointsTag) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NddotopologyTopologyLinkEndpointsTag.
func (in *NddotopologyTopologyLinkEndpointsTag) DeepCopy() *NddotopologyTopologyLinkEndpointsTag {
	if in == nil {
		return nil
	}
	out := new(NddotopologyTopologyLinkEndpointsTag)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NddotopologyTopologyLinkState) DeepCopyInto(out *NddotopologyTopologyLinkState) {
	*out = *in
	if in.LastUpdate != nil {
		in, out := &in.LastUpdate, &out.LastUpdate
		*out = new(string)
		**out = **in
	}
	if in.Reason != nil {
		in, out := &in.Reason, &out.Reason
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NddotopologyTopologyLinkState.
func (in *NddotopologyTopologyLinkState) DeepCopy() *NddotopologyTopologyLinkState {
	if in == nil {
		return nil
	}
	out := new(NddotopologyTopologyLinkState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NddotopologyTopologyLinkTag) DeepCopyInto(out *NddotopologyTopologyLinkTag) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NddotopologyTopologyLinkTag.
func (in *NddotopologyTopologyLinkTag) DeepCopy() *NddotopologyTopologyLinkTag {
	if in == nil {
		return nil
	}
	out := new(NddotopologyTopologyLinkTag)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NddotopologyTopologyNode) DeepCopyInto(out *NddotopologyTopologyNode) {
	*out = *in
	if in.AdminState != nil {
		in, out := &in.AdminState, &out.AdminState
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.KindName != nil {
		in, out := &in.KindName, &out.KindName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(NddotopologyTopologyNodeState)
		(*in).DeepCopyInto(*out)
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = make([]*NddotopologyTopologyNodeTag, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(NddotopologyTopologyNodeTag)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NddotopologyTopologyNode.
func (in *NddotopologyTopologyNode) DeepCopy() *NddotopologyTopologyNode {
	if in == nil {
		return nil
	}
	out := new(NddotopologyTopologyNode)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NddotopologyTopologyNodeState) DeepCopyInto(out *NddotopologyTopologyNodeState) {
	*out = *in
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = make([]*NddotopologyTopologyNodeStateEndpoint, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(NddotopologyTopologyNodeStateEndpoint)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.LastUpdate != nil {
		in, out := &in.LastUpdate, &out.LastUpdate
		*out = new(string)
		**out = **in
	}
	if in.Reason != nil {
		in, out := &in.Reason, &out.Reason
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NddotopologyTopologyNodeState.
func (in *NddotopologyTopologyNodeState) DeepCopy() *NddotopologyTopologyNodeState {
	if in == nil {
		return nil
	}
	out := new(NddotopologyTopologyNodeState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NddotopologyTopologyNodeStateEndpoint) DeepCopyInto(out *NddotopologyTopologyNodeStateEndpoint) {
	*out = *in
	if in.Lag != nil {
		in, out := &in.Lag, &out.Lag
		*out = new(bool)
		**out = **in
	}
	if in.LagSubLink != nil {
		in, out := &in.LagSubLink, &out.LagSubLink
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NddotopologyTopologyNodeStateEndpoint.
func (in *NddotopologyTopologyNodeStateEndpoint) DeepCopy() *NddotopologyTopologyNodeStateEndpoint {
	if in == nil {
		return nil
	}
	out := new(NddotopologyTopologyNodeStateEndpoint)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NddotopologyTopologyNodeTag) DeepCopyInto(out *NddotopologyTopologyNodeTag) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NddotopologyTopologyNodeTag.
func (in *NddotopologyTopologyNodeTag) DeepCopy() *NddotopologyTopologyNodeTag {
	if in == nil {
		return nil
	}
	out := new(NddotopologyTopologyNodeTag)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NddotopologyTopologyState) DeepCopyInto(out *NddotopologyTopologyState) {
	*out = *in
	if in.LastUpdate != nil {
		in, out := &in.LastUpdate, &out.LastUpdate
		*out = new(string)
		**out = **in
	}
	if in.Reason != nil {
		in, out := &in.Reason, &out.Reason
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NddotopologyTopologyState.
func (in *NddotopologyTopologyState) DeepCopy() *NddotopologyTopologyState {
	if in == nil {
		return nil
	}
	out := new(NddotopologyTopologyState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Root) DeepCopyInto(out *Root) {
	*out = *in
	if in.TopoNddotopology != nil {
		in, out := &in.TopoNddotopology, &out.TopoNddotopology
		*out = new(Nddotopology)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Root.
func (in *Root) DeepCopy() *Root {
	if in == nil {
		return nil
	}
	out := new(Root)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopoTopology) DeepCopyInto(out *TopoTopology) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopoTopology.
func (in *TopoTopology) DeepCopy() *TopoTopology {
	if in == nil {
		return nil
	}
	out := new(TopoTopology)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TopoTopology) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopoTopologyLink) DeepCopyInto(out *TopoTopologyLink) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopoTopologyLink.
func (in *TopoTopologyLink) DeepCopy() *TopoTopologyLink {
	if in == nil {
		return nil
	}
	out := new(TopoTopologyLink)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TopoTopologyLink) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopoTopologyLinkList) DeepCopyInto(out *TopoTopologyLinkList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TopoTopologyLink, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopoTopologyLinkList.
func (in *TopoTopologyLinkList) DeepCopy() *TopoTopologyLinkList {
	if in == nil {
		return nil
	}
	out := new(TopoTopologyLinkList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TopoTopologyLinkList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopoTopologyList) DeepCopyInto(out *TopoTopologyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TopoTopology, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopoTopologyList.
func (in *TopoTopologyList) DeepCopy() *TopoTopologyList {
	if in == nil {
		return nil
	}
	out := new(TopoTopologyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TopoTopologyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopoTopologyNode) DeepCopyInto(out *TopoTopologyNode) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopoTopologyNode.
func (in *TopoTopologyNode) DeepCopy() *TopoTopologyNode {
	if in == nil {
		return nil
	}
	out := new(TopoTopologyNode)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TopoTopologyNode) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopoTopologyNodeList) DeepCopyInto(out *TopoTopologyNodeList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TopoTopologyNode, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopoTopologyNodeList.
func (in *TopoTopologyNodeList) DeepCopy() *TopoTopologyNodeList {
	if in == nil {
		return nil
	}
	out := new(TopoTopologyNodeList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TopoTopologyNodeList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Topology) DeepCopyInto(out *Topology) {
	*out = *in
	if in.AdminState != nil {
		in, out := &in.AdminState, &out.AdminState
		*out = new(string)
		**out = **in
	}
	if in.Defaults != nil {
		in, out := &in.Defaults, &out.Defaults
		*out = new(TopologyDefaults)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = make([]*TopologyKind, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(TopologyKind)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Topology.
func (in *Topology) DeepCopy() *Topology {
	if in == nil {
		return nil
	}
	out := new(Topology)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopologyDefaults) DeepCopyInto(out *TopologyDefaults) {
	*out = *in
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = make([]*TopologyDefaultsTag, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(TopologyDefaultsTag)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopologyDefaults.
func (in *TopologyDefaults) DeepCopy() *TopologyDefaults {
	if in == nil {
		return nil
	}
	out := new(TopologyDefaults)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopologyDefaultsTag) DeepCopyInto(out *TopologyDefaultsTag) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopologyDefaultsTag.
func (in *TopologyDefaultsTag) DeepCopy() *TopologyDefaultsTag {
	if in == nil {
		return nil
	}
	out := new(TopologyDefaultsTag)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopologyKind) DeepCopyInto(out *TopologyKind) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = make([]*TopologyKindTag, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(TopologyKindTag)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopologyKind.
func (in *TopologyKind) DeepCopy() *TopologyKind {
	if in == nil {
		return nil
	}
	out := new(TopologyKind)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopologyKindTag) DeepCopyInto(out *TopologyKindTag) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopologyKindTag.
func (in *TopologyKindTag) DeepCopy() *TopologyKindTag {
	if in == nil {
		return nil
	}
	out := new(TopologyKindTag)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopologyLink) DeepCopyInto(out *TopologyLink) {
	*out = *in
	if in.AdminState != nil {
		in, out := &in.AdminState, &out.AdminState
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Endpoints != nil {
		in, out := &in.Endpoints, &out.Endpoints
		*out = make([]*TopologyLinkEndpoints, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(TopologyLinkEndpoints)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = make([]*TopologyLinkTag, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(TopologyLinkTag)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopologyLink.
func (in *TopologyLink) DeepCopy() *TopologyLink {
	if in == nil {
		return nil
	}
	out := new(TopologyLink)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopologyLinkEndpoints) DeepCopyInto(out *TopologyLinkEndpoints) {
	*out = *in
	if in.InterfaceName != nil {
		in, out := &in.InterfaceName, &out.InterfaceName
		*out = new(string)
		**out = **in
	}
	if in.NodeName != nil {
		in, out := &in.NodeName, &out.NodeName
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = make([]*TopologyLinkEndpointsTag, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(TopologyLinkEndpointsTag)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopologyLinkEndpoints.
func (in *TopologyLinkEndpoints) DeepCopy() *TopologyLinkEndpoints {
	if in == nil {
		return nil
	}
	out := new(TopologyLinkEndpoints)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopologyLinkEndpointsTag) DeepCopyInto(out *TopologyLinkEndpointsTag) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopologyLinkEndpointsTag.
func (in *TopologyLinkEndpointsTag) DeepCopy() *TopologyLinkEndpointsTag {
	if in == nil {
		return nil
	}
	out := new(TopologyLinkEndpointsTag)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopologyLinkObservation) DeepCopyInto(out *TopologyLinkObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopologyLinkObservation.
func (in *TopologyLinkObservation) DeepCopy() *TopologyLinkObservation {
	if in == nil {
		return nil
	}
	out := new(TopologyLinkObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopologyLinkParameters) DeepCopyInto(out *TopologyLinkParameters) {
	*out = *in
	if in.TopologyName != nil {
		in, out := &in.TopologyName, &out.TopologyName
		*out = new(string)
		**out = **in
	}
	if in.TopoTopologyLink != nil {
		in, out := &in.TopoTopologyLink, &out.TopoTopologyLink
		*out = new(TopologyLink)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopologyLinkParameters.
func (in *TopologyLinkParameters) DeepCopy() *TopologyLinkParameters {
	if in == nil {
		return nil
	}
	out := new(TopologyLinkParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopologyLinkSpec) DeepCopyInto(out *TopologyLinkSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForNetworkNode.DeepCopyInto(&out.ForNetworkNode)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopologyLinkSpec.
func (in *TopologyLinkSpec) DeepCopy() *TopologyLinkSpec {
	if in == nil {
		return nil
	}
	out := new(TopologyLinkSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopologyLinkStatus) DeepCopyInto(out *TopologyLinkStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	out.AtNetworkNode = in.AtNetworkNode
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopologyLinkStatus.
func (in *TopologyLinkStatus) DeepCopy() *TopologyLinkStatus {
	if in == nil {
		return nil
	}
	out := new(TopologyLinkStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopologyLinkTag) DeepCopyInto(out *TopologyLinkTag) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopologyLinkTag.
func (in *TopologyLinkTag) DeepCopy() *TopologyLinkTag {
	if in == nil {
		return nil
	}
	out := new(TopologyLinkTag)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopologyNode) DeepCopyInto(out *TopologyNode) {
	*out = *in
	if in.AdminState != nil {
		in, out := &in.AdminState, &out.AdminState
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.KindName != nil {
		in, out := &in.KindName, &out.KindName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = make([]*TopologyNodeTag, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(TopologyNodeTag)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopologyNode.
func (in *TopologyNode) DeepCopy() *TopologyNode {
	if in == nil {
		return nil
	}
	out := new(TopologyNode)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopologyNodeObservation) DeepCopyInto(out *TopologyNodeObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopologyNodeObservation.
func (in *TopologyNodeObservation) DeepCopy() *TopologyNodeObservation {
	if in == nil {
		return nil
	}
	out := new(TopologyNodeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopologyNodeParameters) DeepCopyInto(out *TopologyNodeParameters) {
	*out = *in
	if in.TopologyName != nil {
		in, out := &in.TopologyName, &out.TopologyName
		*out = new(string)
		**out = **in
	}
	if in.TopoTopologyNode != nil {
		in, out := &in.TopoTopologyNode, &out.TopoTopologyNode
		*out = new(TopologyNode)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopologyNodeParameters.
func (in *TopologyNodeParameters) DeepCopy() *TopologyNodeParameters {
	if in == nil {
		return nil
	}
	out := new(TopologyNodeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopologyNodeSpec) DeepCopyInto(out *TopologyNodeSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForNetworkNode.DeepCopyInto(&out.ForNetworkNode)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopologyNodeSpec.
func (in *TopologyNodeSpec) DeepCopy() *TopologyNodeSpec {
	if in == nil {
		return nil
	}
	out := new(TopologyNodeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopologyNodeStatus) DeepCopyInto(out *TopologyNodeStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	out.AtNetworkNode = in.AtNetworkNode
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopologyNodeStatus.
func (in *TopologyNodeStatus) DeepCopy() *TopologyNodeStatus {
	if in == nil {
		return nil
	}
	out := new(TopologyNodeStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopologyNodeTag) DeepCopyInto(out *TopologyNodeTag) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopologyNodeTag.
func (in *TopologyNodeTag) DeepCopy() *TopologyNodeTag {
	if in == nil {
		return nil
	}
	out := new(TopologyNodeTag)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopologyObservation) DeepCopyInto(out *TopologyObservation) {
	*out = *in
	if in.Nddotopology != nil {
		in, out := &in.Nddotopology, &out.Nddotopology
		*out = new(Nddotopology)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopologyObservation.
func (in *TopologyObservation) DeepCopy() *TopologyObservation {
	if in == nil {
		return nil
	}
	out := new(TopologyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopologyParameters) DeepCopyInto(out *TopologyParameters) {
	*out = *in
	if in.TopoTopology != nil {
		in, out := &in.TopoTopology, &out.TopoTopology
		*out = new(Topology)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopologyParameters.
func (in *TopologyParameters) DeepCopy() *TopologyParameters {
	if in == nil {
		return nil
	}
	out := new(TopologyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopologySpec) DeepCopyInto(out *TopologySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForNetworkNode.DeepCopyInto(&out.ForNetworkNode)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopologySpec.
func (in *TopologySpec) DeepCopy() *TopologySpec {
	if in == nil {
		return nil
	}
	out := new(TopologySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopologyStatus) DeepCopyInto(out *TopologyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtNetworkNode.DeepCopyInto(&out.AtNetworkNode)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopologyStatus.
func (in *TopologyStatus) DeepCopy() *TopologyStatus {
	if in == nil {
		return nil
	}
	out := new(TopologyStatus)
	in.DeepCopyInto(out)
	return out
}
